# primeira questao
def soma_naturais(n: int):
  if (n == 1):
    return 1
  return n+soma_naturais(n-1)

print(soma_naturais(100))

# segunda questao
def fatorial(n: int):
  if (n == 0 or n  == 1):
    return 1
  return n*fatorial(n-1)

print(fatorial(5))

# terceira questao
lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

def encontrar_lista(lista, n, valor):
  if n == 0:
    return False
  else:
    return (valor == lista[n-1]) or encontrar_lista(lista, n - 1, valor)

print(encontrar_lista(lista, 12, 10))
print(encontrar_lista(lista, 12, 24))

# quarta  questao
def potencia(a, b):
  if(b == 0):
    return 1
  else:
    return a*potencia(a, b - 1)

print(potencia(10, 2))

# quinta questao
def fibonacci(n):
  if n in [0,1]:
    return n
  else:
    return fibonacci(n-1) + fibonacci (n-2)

print(fibonacci(12))

# sexta questao
def dec_bin(n):
  if n in [0, 1]:
    return str(n)
  else:
    return dec_bin(n // 2) + str(n % 2)

print(dec_bin(10))

# setima questao
hanoi
def hanoi(a, b, c, n):
  if n > 0:
    hanoi(a, c, b, n-1)
    print("Mova o disco "+ str(n) + " de " + a + " para " + c)
    hanoi(b, a, c, n-1)

hanoi("A", "B", "C", 3)

-------------------------------------------
# oitava questao
def inverte(n):
    n = str(n)
    if n == '':
        return n
    return inverte(n[1:]) + n[0]
print(inverte(123))

# nona questao 
def recursive_list(data_list):
  total = 0
  for element in data_list:
    if isinstance(element, list):
      total += recursive_list(element)
    else: 
      total += element 
  return total
  
print(recursive_list([1, 2, [3,4],[5,6]]))

# decima questao
def soma(n):
  if n == []:
    return 0
  else:
    return soma(n[1:])+n[0]

print(soma([1, 2, 3]))
print(soma([10, 20, 30, 40]))
print(soma([10, 20, 30, 40, 50, 60 ]))

# decima-primeira questao
